import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import Topbar from '../components/Topbar';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import ContactSection from '../components/ContactSection';

interface Message {
  sender: 'user' | 'bot';
  text: string;
}

const ProfessionalsPage: React.FC = () => {
  const [messages, setMessages] = useState<Message[]>([
    {
      sender: 'bot',
      text: 'Xin ch√†o üëã T√¥i l√† HyperBot ‚Äì tr·ª£ l√Ω AI h·ªçc t·∫≠p c·ªßa b·∫°n. B·∫°n mu·ªën h·ªèi g√¨ v·ªÅ AI h√¥m nay?',
    },
  ]);
  const [input, setInput] = useState('');
  const [isTyping, setIsTyping] = useState(false);

  const handleSend = (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim()) return;

    const newMsg: Message = { sender: 'user', text: input };
    setMessages((prev) => [...prev, newMsg]);
    setIsTyping(true);

    setTimeout(() => {
      const lower = input.toLowerCase();
      let replyText = '';

      if (lower.includes('b·∫Øt ƒë·∫ßu') || lower.includes('doanh nghi·ªáp')) {
        replyText =
          'üí° C√°ch t·ªët nh·∫•t ƒë·ªÉ b·∫Øt ƒë·∫ßu l√† h·ªçc **kh√≥a AI th·ª±c chi·∫øn cho ng∆∞·ªùi ƒëi l√†m** t·∫°i Hyper ONE. ' +
          'B·∫°n s·∫Ω ƒë∆∞·ª£c h∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc ƒë·ªÉ t·ª± ƒë·ªông h√≥a c√¥ng vi·ªác, t·∫°o workflow v√† ƒëo l∆∞·ªùng hi·ªáu qu·∫£ th·∫≠t. üöÄ<br/><br/>' +
          'üëâ ƒê·∫∑t l·ªãch t∆∞ v·∫•n ngay qua hotline **0352608068** ho·∫∑c nh·∫•n ‚ÄúH·ªçc ngay‚Äù b√™n d∆∞·ªõi.';
      } else if (lower.includes('t·∫°i sao ai') || lower.includes('tr·∫£ l·ªùi kh√°c')) {
        replyText =
          'ü§ñ M·ªói l·∫ßn AI tr·∫£ l·ªùi, n√≥ s·∫Ω ‚Äúsuy nghƒ©‚Äù l·∫°i t·ª´ ƒë·∫ßu d·ª±a tr√™n x√°c su·∫•t ‚Äî n√™n hai c√¢u c√≥ th·ªÉ kh√°c nhau d√π c√πng m·ªôt c√¢u h·ªèi! ' +
          'N·∫øu b·∫°n mu·ªën hi·ªÉu s√¢u c∆° ch·∫ø n√†y, h√£y h·ªçc ph·∫ßn *Prompt Engineering & AI Literacy* trong kh√≥a h·ªçc c·ªßa Hyper ONE nh√©.';
      } else {
        const replies = [
          'AI tr·∫£ l·ªùi kh√°c nhau v√¨ ng·ªØ c·∫£nh thay ƒë·ªïi m·ªói l·∫ßn, gi·ªëng nh∆∞ con ng∆∞·ªùi nh√¨n c√πng v·∫•n ƒë·ªÅ ·ªü hai g√≥c kh√°c nhau üîÅ',
          'V√¨ AI kh√¥ng c√≥ k√Ω ·ª©c th·∫≠t ‚Äî n·∫øu b·∫°n kh√¥ng cung c·∫•p l·∫°i ng·ªØ c·∫£nh, n√≥ s·∫Ω t·∫°o ph·∫£n h·ªìi m·ªõi üéØ',
          'AI kh√¥ng ‚Äúto√†n b·ªô‚Äù, m√† l√† h·ªá th·ªëng d·ª± ƒëo√°n c√≥ ƒëi·ªÅu ki·ªán. Nh∆∞ng n·∫øu bi·∫øt c√°ch d·∫´n d·∫Øt, b·∫°n c√≥ th·ªÉ khi·∫øn AI ·ªïn ƒë·ªãnh h∆°n ü§ù',
        ];
        replyText = replies[Math.floor(Math.random() * replies.length)];
      }

      const botReply: Message = { sender: 'bot', text: replyText };
      setMessages((prev) => [...prev, botReply]);
      setIsTyping(false);
    }, 1000);

    setInput('');
  };

  const samplePrompts = [
    'AI c√≥ th·ªÉ thay th·∫ø con ng∆∞·ªùi trong c√¥ng vi·ªác kh√¥ng?',
    'L√†m sao ƒë·ªÉ b·∫Øt ƒë·∫ßu ·ª©ng d·ª•ng AI v√†o doanh nghi·ªáp?',
    'T·∫°i sao AI l·∫°i tr·∫£ l·ªùi 2 c√¢u ho√†n to√†n kh√°c nhau?',
  ];

  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-br from-cyan-50 via-blue-50 to-indigo-50">
      <Topbar />
      <Navbar />

      {/* HERO */}
      <section className="pt-20 pb-24 px-4 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-cyan-50 via-blue-50 to-indigo-50 z-0"></div>
        <div className="container mx-auto relative z-10 text-center">
          <h1 className="text-4xl md:text-5xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 via-indigo-500 to-cyan-600 animate-gradient-x">
            Ng∆∞·ªùi ƒëi l√†m ‚Äî AI th·ª±c chi·∫øn üíº
          </h1>
          <p className="text-lg md:text-xl text-gray-700 max-w-3xl mx-auto leading-relaxed">
            H·ªçc AI th·∫≠t s·ª± mang l·∫°i k·∫øt qu·∫£. N√¢ng nƒÉng su·∫•t, t·ª± ƒë·ªông h√≥a c√¥ng vi·ªác, 
            v√† m·ªü ra c·∫•p ƒë·ªô ngh·ªÅ nghi·ªáp m·ªõi c√πng Hyper ONE Academy.
          </p>
        </div>
      </section>

      {/* üíé CAM K·∫æT DUY NH·∫§T */}
      <section className="py-16 px-4 bg-white">
        <div className="container mx-auto text-center max-w-4xl">
          <h2 className="text-3xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-cyan-500 to-indigo-600">
            Cam k·∫øt duy nh·∫•t t·∫°i Vi·ªát Nam üáªüá≥
          </h2>
          <p className="text-gray-700 text-lg leading-relaxed mb-8">
            Kh√¥ng c√≥ kh√≥a h·ªçc n√†o kh√°c ƒë∆∞·ª£c d·∫°y b·ªüi nh·ªØng **ng∆∞·ªùi ƒëang tr·ª±c ti·∫øp v·∫≠n h√†nh doanh nghi·ªáp th·∫≠t**.  
            Hyper ONE l√† n∆°i duy nh·∫•t n∆°i b·∫°n h·ªçc AI <strong>t·ª´ t∆∞ duy kinh doanh ƒë·∫øn h√†nh ƒë·ªông</strong> ‚Äì  
            t·ª´ ‚ÄúFollow ra Product‚Äù ƒë·∫øn ‚ÄúBuild Business nh·ªè c·ªßa ch√≠nh b·∫°n‚Äù.  
          </p>
          <p className="text-gray-600 italic">
            ƒê√¢y kh√¥ng ph·∫£i l√† kh√≥a h·ªçc l√Ω thuy·∫øt, m√† l√† h√†nh tr√¨nh th·∫≠t ‚Äì n∆°i b·∫°n t·∫°o ra s·∫£n ph·∫©m, 
            √°p d·ª•ng AI v√†o c√¥ng vi·ªác, v√† th·∫•y k·∫øt qu·∫£ th·ª±c t·∫ø.
          </p>
        </div>
      </section>

      {/* üí¨ CHATBOT */}
      <section className="py-16 px-4 bg-white">
        <div className="container mx-auto max-w-3xl">
          <h2 className="text-3xl font-bold text-center mb-6 text-transparent bg-clip-text bg-gradient-to-r from-cyan-500 to-indigo-600">
            Tr·∫£i nghi·ªám Chatbot AI m√¥ ph·ªèng ü§ñ
          </h2>
          <p className="text-center text-gray-600 mb-6">
            H·ªèi th·ª≠ HyperBot v·ªÅ c√°c c√¢u g·ª£i √Ω b√™n d∆∞·ªõi üëá
          </p>

          <div className="flex flex-wrap gap-3 justify-center mb-6">
            {samplePrompts.map((prompt, i) => (
              <button
                key={i}
                onClick={() => setInput(prompt)}
                className="bg-cyan-100 hover:bg-cyan-200 text-cyan-800 px-4 py-2 rounded-full text-sm transition"
              >
                üí° {prompt}
              </button>
            ))}
          </div>

          <div className="relative border border-cyan-200 rounded-2xl p-4 h-[400px] overflow-y-auto bg-gradient-to-br from-white to-cyan-50 shadow-inner animate-pulse-light">
            {messages.map((msg, idx) => (
              <div
                key={idx}
                className={`mb-3 flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div
                  className={`px-4 py-2 rounded-2xl max-w-[80%] ${
                    msg.sender === 'user'
                      ? 'bg-cyan-500 text-white rounded-br-none'
                      : 'bg-gray-100 text-gray-800 rounded-bl-none'
                  }`}
                >
                  <div dangerouslySetInnerHTML={{ __html: msg.text.replace(/\n/g, '<br/>') }} />
                  {msg.text.includes('H·ªçc ngay') && (
                    <div className="mt-3">
                      <a
                        href="tel:0352608068"
                        className="bg-gradient-to-r from-cyan-500 to-indigo-500 text-white px-4 py-2 rounded-lg text-sm shadow-md hover:scale-105 transition-transform inline-block"
                      >
                        H·ªåC NGAY üöÄ
                      </a>
                    </div>
                  )}
                </div>
              </div>
            ))}

            {isTyping && (
              <div className="flex justify-start mb-3">
                <div className="bg-gray-100 text-gray-500 rounded-2xl px-4 py-2">
                  <span className="animate-bounce">‚óè</span>
                  <span className="animate-bounce delay-150">‚óè</span>
                  <span className="animate-bounce delay-300">‚óè</span>
                </div>
              </div>
            )}
          </div>

          <form onSubmit={handleSend} className="mt-4 flex">
            <input
              type="text"
              placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
              value={input}
              onChange={(e) => setInput(e.target.value)}
              className="flex-1 px-4 py-2 border border-cyan-300 rounded-l-lg focus:outline-none"
            />
            <button
              type="submit"
              className="bg-cyan-500 text-white px-5 rounded-r-lg hover:bg-cyan-600 transition"
            >
              G·ª≠i
            </button>
          </form>
        </div>
      </section>

      {/* üöÄ L·ªò TR√åNH */}
      <section className="py-16 px-4 bg-cyan-50">
        <div className="container mx-auto">
          <h2 className="text-3xl font-bold text-center mb-12 text-transparent bg-clip-text bg-gradient-to-r from-cyan-500 to-indigo-600">
            L·ªô tr√¨nh h·ªçc t·∫≠p chuy√™n s√¢u
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
            {[
              {
                title: 'AI Literacy ‚Üí Action',
                subtitle: 'Workflow c√° nh√¢n',
                description:
                  'L√†m ch·ªß c√¥ng c·ª• AI v√† x√¢y d·ª±ng quy tr√¨nh l√†m vi·ªác c√° nh√¢n hi·ªáu qu·∫£.',
                features: [
                  'Prompt Engineering n√¢ng cao',
                  'T·ª± ƒë·ªông h√≥a t√°c v·ª• l·∫∑p l·∫°i',
                  'X√¢y d·ª±ng workflow c√° nh√¢n',
                  'ƒêo l∆∞·ªùng nƒÉng su·∫•t',
                ],
              },
              {
                title: 'Dev th·ª±c chi·∫øn',
                subtitle: 'API / Agent',
                description:
                  'Ph√°t tri·ªÉn ·ª©ng d·ª•ng AI qua API & Agent t·ª± ƒë·ªông, k·∫øt n·ªëi h·ªá th·ªëng th·ª±c t·∫ø.',
                features: [
                  'T√≠ch h·ª£p m√¥ h√¨nh AI v√†o app',
                  'X√¢y d·ª±ng agent t·ª± ƒë·ªông',
                  '·ª®ng d·ª•ng web/mobile c√≥ AI',
                  'T·ªëi ∆∞u hi·ªáu su·∫•t & chi ph√≠',
                ],
              },
              {
                title: 'AI for Growth',
                subtitle: 'Funnel & Content Pipeline',
                description:
                  '·ª®ng d·ª•ng AI ƒë·ªÉ tƒÉng tr∆∞·ªüng doanh nghi·ªáp b·∫±ng automation marketing & d·ªØ li·ªáu.',
                features: [
                  'X√¢y d·ª±ng funnel marketing',
                  'T·ª± ƒë·ªông h√≥a n·ªôi dung',
                  'Ph√¢n t√≠ch d·ªØ li·ªáu kh√°ch h√†ng',
                  'T·ªëi ∆∞u chi·∫øn l∆∞·ª£c tƒÉng tr∆∞·ªüng',
                ],
              },
            ].map((track, i) => (
              <div
                key={i}
                className="bg-white rounded-xl overflow-hidden shadow-lg hover:shadow-xl border border-cyan-100 transition-transform hover:scale-105"
              >
                <div className="h-2 bg-cyan-500"></div>
                <div className="p-6">
                  <h3 className="text-xl font-semibold mb-1 text-cyan-700">{track.title}</h3>
                  <div className="inline-block px-3 py-1 bg-cyan-100 text-cyan-800 rounded-full text-sm font-medium mb-3">
                    {track.subtitle}
                  </div>
                  <p className="text-gray-600 mb-4">{track.description}</p>
                  <ul className="space-y-2 text-left">
                    {track.features.map((f, j) => (
                      <li key={j} className="flex items-center">
                        <span className="text-cyan-500 mr-2">‚úì</span>
                        <span className="text-sm text-gray-600">{f}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA */}
      <section className="py-16 px-4 bg-white">
        <div className="container mx-auto text-center">
          <p className="text-gray-700 mb-6 font-medium">
            üìå D√†nh ri√™ng cho ng∆∞·ªùi ƒëi l√†m ‚Äî h·ªçc linh ho·∫°t, ƒëo ƒë∆∞·ª£c hi·ªáu qu·∫£.
          </p>
          <a
            href="tel:0352608068"
            className="bg-cyan-500 text-white font-semibold py-3 px-8 rounded-lg hover:bg-cyan-600 transition inline-block"
          >
            ‚òéÔ∏è G·ªçi t∆∞ v·∫•n ngay 0352608068 (Hotline 24/7)
          </a>
        </div>
      </section>

      <ContactSection />
      <Footer />
    </div>
  );
};

export default ProfessionalsPage;
